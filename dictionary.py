# -*- coding: utf-8 -*-
"""dictionary.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/12cXXefs4CZY9FerM6iZcm7fyWQzhxjzN
"""

import pandas as pd              # importing pandas to clean and process the dataset

df = pd.read_csv("dict.csv")     # Read the CSV file into a pandas DataFrame

print(df)                        # Print the entire DataFrame

pd.isna(df)                      # Check for missing values (NaN) in the DataFrame

df2 = df.copy()                            # Create a copy of the DataFrame
df2['word'] = df2['word'].astype(str)      # Ensure the 'word' column is of string type
df2['word'] = df2['word'].str.lower()      # Convert all words in the 'word' column to lowercase
df2                                        # Display the modified DataFrame

df2 = df2.sort_values(by='word', ascending=True)    # Sort the DataFrame by the 'word' column in ascending order
df2.reset_index(drop=True, inplace=True)            # Reset the index of the DataFrame
df2                                                 # Display the sorted and re-indexed DataFrame

df2.describe(include='all')               # Generate descriptive statistics for the DataFrame, including all columns

df2['word'].value_counts()                # Count the occurrences of each unique word in the 'word' column

lead_rows = df2[df2['word'] == 'lead']          # Filter the DataFrame to get rows where the word is 'lead'
display(lead_rows)                              # Display the filtered rows
print(lead_rows.dtypes)                         # Print the data types of the columns in the filtered DataFrame

df3 = df2.drop_duplicates(subset='word', keep='first')          # Drop duplicate rows based on the 'word' column, keeping the first occurrence
df3 = df3.reset_index(drop=True)                                # Reset the index of the new DataFrame
df3.describe(include='all')                                     # Generate descriptive statistics for the new DataFrame

df3['word'].value_counts()                                      # Count the occurrences of each unique word in the 'word' column of the new DataFrame

df3.to_csv("Dictionary.csv")    # Save the revised and clean DataFrame to a CSV file
df3                             # Display the new DataFrame with duplicate words removed

print("This is an english dictionary.")        # Print a welcome message
word = input("Enter the word: ")               # Get user input for the word to search
defn = df3[df3['word'] == word]                # Filter the DataFrame to find the word
if not defn.empty:                             # Check if the word was found
  for i in defn.iloc[0,1]:                     # Iterate through the characters of the definition
    if(i=='.'):                                # If the character is a period, print a period to move the succeding lines in the next line
      print('.')
    else:                                      # Otherwise, print the character without a newline
      print(i,end='')
else: # If the word was not found
  print("Word not found in the dictionary.")   # Print a message indicating the word was not found